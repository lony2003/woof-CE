#------------------
#PKG_DOCS_PET_REPOS - where to download the pet pkgs databases from.
#------------------
# 1|2|3
#   1 - domain. for testing the url.
#   2 - full URI of the database file.
#   3 - name of db file when local and after being processed into standard format
#  (in the case of PET databases, the names are the same and no processing is required)

# we don't use pet packages, so it's OK to always use testing
WCE_BRANCH=testing

PKG_DOCS_PET_REPOS="
z|http://mirrors.tuna.tsinghua.edu.cn/puppy/Packages-puppy-noarch-official|z
z|http://mirrors.tuna.tsinghua.edu.cn/puppy/Packages-puppy-common64-official|z
z|http://mirrors.tuna.tsinghua.edu.cn/puppy/Packages-puppy-bionic64-official|z
z|http://mirrors.tuna.tsinghua.edu.cn/puppy/Packages-puppy-xenial64-official|z
z|http://mirrors.tuna.tsinghua.edu.cn/puppy/Packages-puppy-tahr64-official|z
z|http://mirrors.tuna.tsinghua.edu.cn/puppy/Packages-puppy-fossa64-official|z
"

#---------
#PET_REPOS - hardcode the pet repos in here...
#---------
# 1|2|3
#   1 - domain. for testing the url.
#   2 - full URI of the repo
#   3 - name of db-file(s) associated with that repo. it may have glob wildcards.
#   ex: Packages-puppy-4-official (note, url paths are in the database)

PET_REPOS='
z|http://mirrors.tuna.tsinghua.edu.cn/puppy|Packages-puppy-*-official
'

#----------------------
#PACKAGELISTS_PET_ORDER
#----------------------
#   this defines where Woof (and PPM) looks first and second
#   (and third, etc.) for pet pkgs

PACKAGELISTS_PET_ORDER="
Packages-puppy-common64-official
Packages-puppy-noarch-official
Packages-puppy-bionic64-official
Packages-puppy-xenial64-official
Packages-puppy-tahr64-official
Packages-puppy-fossa64-official
"

#---------------
# fix variables
#---------------
PKG_DOCS_PET_REPOS="$(echo $PKG_DOCS_PET_REPOS)"
PET_REPOS="$(echo $PET_REPOS)"
PACKAGELISTS_PET_ORDER="$(echo $PACKAGELISTS_PET_ORDER)"

